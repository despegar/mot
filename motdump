#!/usr/bin/python
import sys, socket, argparse, signal

parser = argparse.ArgumentParser(
	description="Dump Mot messages. Somewhat like tcpdump, but it understands Mot's format.")
parser.add_argument('-p', '--port', type=int, default=6000, help="port to connect to (default: %(default)s)")
parser.add_argument('-b', '--body', action='store_true', help="show message bodies")
parser.add_argument('-a', '--attributes', action='store_true', help="show attribute values")
parser.add_argument('-s', '--buffer-size', type=int, default=10000, 
	help="buffer in which the messages are filtered, increase if message are discarded (default: %(default)s)")
parser.add_argument('-l', '--length', type=int, default=1024, 
	help="how many characters are shown of each message if option '--body' is used (default: %(default)s)")
parser.add_argument('tokens', nargs='*', metavar="expression", help="filter expression; if absent, all messages are dumped")
args = parser.parse_args()

timeout = 10000
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
host = 'localhost'
try:
	sock.connect((host, args.port))
except socket.error, e:
	sys.stderr.write("Cannot connect to %s:%s: %s\n" % (host, args.port, e.strerror))
	sys.exit(1)

sock.settimeout(timeout)

sock.sendall('body=%s\n' % args.body)
sock.sendall('length=%s\n' % args.length)
sock.sendall('attributes=%s\n' % args.attributes)
sock.sendall('buffer-size=%s\n' % args.buffer_size)
filter = ' '.join(args.tokens)
if filter != '':
	sock.sendall('filter=%s\n' % filter)
sock.sendall('\n')
buffersize = 4096

def read_loop():
	data = sock.recv(buffersize)
	while data:
		sys.stdout.write(data)
		data = sock.recv(buffersize)

try:
	read_loop()
except KeyboardInterrupt:
	# we don't want to process interruptions while handling one 
	signal.signal(signal.SIGINT, signal.SIG_IGN)
	# show final information
	sock.shutdown(socket.SHUT_WR)
	read_loop()
	print
