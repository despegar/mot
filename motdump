#!/usr/bin/python
import sys, socket, argparse, signal

parser = argparse.ArgumentParser()
parser.add_argument('-p', '--port', type=int, default=6000)
parser.add_argument('-b', '--body', action='store_true')
parser.add_argument('-s', '--buffer-size', type=int, default=10000)
parser.add_argument('-l', '--length', type=int, default=1024)
#parser.add_argument	('tokens', nargs='*')
args = parser.parse_args()

timeout = 10000
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect(("localhost", args.port))
sock.settimeout(timeout)

sock.sendall('body=%s\n' % args.body)
sock.sendall('length=%s\n' % args.length)
sock.sendall('buffer-size=%s\n' % args.buffer_size)
sock.sendall('\n')
buffersize = 4096

def read_loop():
	data = sock.recv(buffersize)
	while data:
		sys.stdout.write(data)
		data = sock.recv(buffersize)

try:
	read_loop()
except KeyboardInterrupt:
	# we don't want to process interruptions while handling one 
	signal.signal(signal.SIGINT, signal.SIG_IGN)
	# show final information
	sock.shutdown(socket.SHUT_WR)
	read_loop()
	print
